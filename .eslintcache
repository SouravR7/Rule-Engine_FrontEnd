[{"G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\index.js":"1","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\reportWebVitals.js":"2","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\App.js":"3","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\Home.js":"4","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\Login.js":"5","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\SignUp.js":"6","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\ListItem.js":"7"},{"size":565,"mtime":1609783603426,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":600,"mtime":1610432421177,"results":"11","hashOfConfig":"9"},{"size":9808,"mtime":1609911133051,"results":"12","hashOfConfig":"9"},{"size":4746,"mtime":1610433853207,"results":"13","hashOfConfig":"9"},{"size":5834,"mtime":1609797619575,"results":"14","hashOfConfig":"9"},{"size":2049,"mtime":1609910682655,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1fywn3",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},"G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\index.js",["35","36","37"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["38","39"],"G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\reportWebVitals.js",[],"G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\App.js",["40"],"G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\Home.js",["41","42","43","44","45","46"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItems from \"./ListItem\";\r\nimport \"./CSS/home.css\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {\"Copyright Â© \"}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{\" \"}\r\n//       {new Date().getFullYear()}\r\n//       {\".\"}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [time, setTime] = useState(\r\n    new Date().toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n      hour12: true,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!window.localStorage.getItem(\"login\")) {\r\n      //console.log(\"Click\");\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    const login = JSON.parse(window.localStorage.getItem(\"login\"));\r\n    //console.log(login.name);\r\n    setUsername(login.name);\r\n\r\n    const intervalID = setInterval(() => {\r\n      setTime(\r\n        new Date().toLocaleTimeString(\"en-US\", {\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\",\r\n          hour12: true,\r\n        })\r\n      );\r\n    }, 1000);\r\n    // return (intervalID) => clearInterval(intervalID);\r\n  }, [username, time]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setDialogOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleButtonClick = () => {\r\n    const checkInput = \"Good Morning\";\r\n    setDialogOpen(true);\r\n    let fixed = new Date();\r\n    fixed.setHours(12, 0, 0, 0);\r\n\r\n    let currentTime = new Date();\r\n\r\n    if (currentTime - fixed < 0 && checkInput === input) {\r\n      setMessage(\"Hello!! Good morning\");\r\n      return;\r\n    }\r\n    if (currentTime - fixed > 0) {\r\n      setMessage(\"Not a Good morning!! Isn't it??\");\r\n\r\n      return;\r\n    }\r\n    if (currentTime - fixed === 0) {\r\n      setMessage(\"Hello !! Have a Great Day\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Hey {username}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Rule Engine\r\n          </Typography>\r\n\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <AccountCircleIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            {username}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItems props={props} />\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <TextField\r\n                  id=\"outlined-textarea\"\r\n                  label=\"Message\"\r\n                  placeholder=\"Message\"\r\n                  variant=\"outlined\"\r\n                  autoFocus\r\n                  onChange={(event) => setInput(event.target.value)}\r\n                />\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.button}\r\n                  onClick={handleButtonClick}\r\n                >\r\n                  Click\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div id=\"label\">Current Time</div>\r\n                <div className=\"my-Clock\">\r\n                  <h3 id=\"time\">{`${time}`}</h3>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\Login.js",["47","48","49","50","51"],"G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\SignUp.js",["52","53","54","55","56","57"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const validate = () => {\r\n    if (!firstname || !lastname || !email || !password || !confirmpassword) {\r\n      window.alert(\"*Please enter the mandatory fields\");\r\n      return;\r\n    }\r\n    if (\r\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      window.alert(\"Please enter a valid email\");\r\n      return;\r\n    }\r\n    if (!(password === confirmpassword)) {\r\n      window.alert(\"Passwords did not match\");\r\n      return;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      axios\r\n        .post(\"http://localhost:7000/api/signup\", {\r\n          firstname,\r\n          lastname,\r\n          email,\r\n          password,\r\n        })\r\n        .then((response) => {\r\n          window.alert(\"registered SucessFull\");\r\n          console.log(response.data);\r\n          props.history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                value={firstname}\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(event) => setFirstname(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                value={lastname}\r\n                autoComplete=\"lname\"\r\n                onChange={(event) => setLastname(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                value={email}\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(event) => setEmail(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm-password\"\r\n                label=\"confirm-Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={confirmpassword}\r\n                autoComplete=\"current-password\"\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleClick}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/\">Already have an account? Sign in</Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}></Box>\r\n    </Container>\r\n  );\r\n}\r\n","G:\\Intentico_Project\\FrontEnd\\Rule_Engine_UI\\rulengine\\src\\Components\\ListItem.js",["58","59","60","61","62","63","64","65"],"import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport SettingsPowerIcon from \"@material-ui/icons/SettingsPower\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function ListItems(props) {\r\n  const handleClick = () => {\r\n    localStorage.removeItem(\"login\");\r\n    Cookies.remove(\"rule_engine_email\", { path: \"\" });\r\n    Cookies.remove(\"rule_engine_password\", { path: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <PeopleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Profile\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <Link to=\"/\" onClick={handleClick}>\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <ListItemText primary=\"Edit Rules\" onClick={handleClick} />\r\n        </Link>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <Link to=\"/\" onClick={handleClick}>\r\n          <ListItemIcon>\r\n            <SettingsPowerIcon />\r\n          </ListItemIcon>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <ListItemText primary=\"Logout\" onClick={handleClick} />\r\n        </Link>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"66","severity":1,"message":"67","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":23},{"ruleId":"66","severity":1,"message":"70","line":6,"column":25,"nodeType":"68","messageId":"69","endLine":6,"endColumn":31},{"ruleId":"66","severity":1,"message":"71","line":6,"column":33,"nodeType":"68","messageId":"69","endLine":6,"endColumn":38},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"66","severity":1,"message":"76","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"77","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":11},{"ruleId":"66","severity":1,"message":"78","line":17,"column":8,"nodeType":"68","messageId":"69","endLine":17,"endColumn":12},{"ruleId":"66","severity":1,"message":"79","line":20,"column":8,"nodeType":"68","messageId":"69","endLine":20,"endColumn":25},{"ruleId":"66","severity":1,"message":"80","line":26,"column":10,"nodeType":"68","messageId":"69","endLine":26,"endColumn":18},{"ruleId":"66","severity":1,"message":"81","line":157,"column":11,"nodeType":"68","messageId":"69","endLine":157,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":168,"column":6,"nodeType":"84","endLine":168,"endColumn":22,"suggestions":"85"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":3,"nodeType":"68","messageId":"69","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"70","line":4,"column":3,"nodeType":"68","messageId":"69","endLine":4,"endColumn":9},{"ruleId":"66","severity":1,"message":"71","line":5,"column":3,"nodeType":"68","messageId":"69","endLine":5,"endColumn":8},{"ruleId":"66","severity":1,"message":"86","line":13,"column":8,"nodeType":"68","messageId":"69","endLine":13,"endColumn":24},{"ruleId":"66","severity":1,"message":"87","line":14,"column":8,"nodeType":"68","messageId":"69","endLine":14,"endColumn":16},{"ruleId":"66","severity":1,"message":"88","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":23},{"ruleId":"66","severity":1,"message":"70","line":2,"column":25,"nodeType":"68","messageId":"69","endLine":2,"endColumn":31},{"ruleId":"66","severity":1,"message":"71","line":2,"column":33,"nodeType":"68","messageId":"69","endLine":2,"endColumn":38},{"ruleId":"66","severity":1,"message":"86","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":24},{"ruleId":"66","severity":1,"message":"87","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":16},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":23},{"ruleId":"66","severity":1,"message":"70","line":2,"column":25,"nodeType":"68","messageId":"69","endLine":2,"endColumn":31},{"ruleId":"66","severity":1,"message":"71","line":2,"column":33,"nodeType":"68","messageId":"69","endLine":2,"endColumn":38},{"ruleId":"66","severity":1,"message":"89","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":21},{"ruleId":"66","severity":1,"message":"90","line":10,"column":8,"nodeType":"68","messageId":"69","endLine":10,"endColumn":24},{"ruleId":"66","severity":1,"message":"91","line":12,"column":8,"nodeType":"68","messageId":"69","endLine":12,"endColumn":20},{"ruleId":"66","severity":1,"message":"92","line":13,"column":8,"nodeType":"68","messageId":"69","endLine":13,"endColumn":18},{"ruleId":"66","severity":1,"message":"93","line":14,"column":8,"nodeType":"68","messageId":"69","endLine":14,"endColumn":22},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'logo' is defined but never used.","'Box' is defined but never used.","'Link' is defined but never used.","'NotificationsIcon' is defined but never used.","'Redirect' is defined but never used.","'intervalID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useEffect' is defined but never used.","'ListSubheader' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [username, time, history]",{"range":"99","text":"100"},[5132,5148],"[username, time, history]"]